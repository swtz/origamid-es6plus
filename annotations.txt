// ANOTAÇÕES | ORIGAMID - ES6+ | 09 Regular Expression

// AULA 0904 | Methods

// Há 2 maneiras de declarar 'regex' no Javascript:
// 1st: de maneira direta (igual é feito no site regexr.com);
// 2nd: pelo construtor 'RegExp'. Pelo construtor, é passada uma string
// como regex (arg0). Há 2 diferenças importantes:
  // 1st: é preciso 'escapar' o caractere '\', ou seja, toda vez
    // que uma regex exigir '\', dever-se-á ser colocada outra '\' antes.
  // 2nd: no arg1, são passadas as 'flags' da regex.
const regexp = /\w+/gi;
const regexp1 = new RegExp('\\w+', 'gi');
const frase = "JavaScript Linguagem 101";
console.log(frase.replace(regexp1, 'X'));

// Propriedades do objeto 'regex';
Object.getOwnPropertyNames(RegExp.prototype);


// .test()
RegExp.prototype.test(String);
// Exemplo:
const phrase = "JavaScript e Java Linguagem 101";
const regex = /Java/g;
console.log(regex.lastIndex); // 0 | não realizou nenhuma pesquisa na 'string';
console.log(regex.test(frase)); // true | achou o charset 'Java';
console.log(regex.lastIndex); // 4 | parou a pesquisa no 'index' 4
console.log(regex.test(frase)); // true | achou o charset 'Java';
console.log(regex.lastIndex); // 17 | parou a pesquisa no 'index' 17;
console.log(regex.test(frase)); // false | não achou o charset 'Java';
console.log(regex.lastIndex); // 0 | termino da 'string';

// como a 'string' terminou ele refaz o loop:
console.log(regex.test(frase)); // true | achou o charset 'Java';
console.log(regex.lastIndex); // 4 | parou a pesquisa no 'index' 4


// Para contar ocorrências de uma palavra:
const frase1 = "JavaScript e Java Linguagem 101";
const regexp2 = /Java/g;
let i = 1;
while (regexp2.test(frase1)) {
  console.log(i++, regexp2.lastIndex);
}


RegExp.prototype.exec(String); // retorna 'null' quando não houver ocorrências.
// .exec()
// Esse método possui o mesmo comportamento interno do método
// .test(), por isso, deve-se ficar atento ao usá-lo num loop,
// pois, ao ser executado mais de uma vez, ele retoma do último
// lugar onde aplicou a 'regex'.

// Abaixo, uma dica de como usá-lo com loop e evitar algum
// comportamento inesperado por disparar a função mais de uma vez:
const frase3 = 'JavaScript, TypeScript, CoffeeScript, Java';
const regexp3 = /\w+/g;
let regexResult;
while ((regexResult = regexp3.exec(frase3)) !== null) {
  console.log(regexResult);
}
// Esse método retorna uma 'array' com algumas informações sobre
// a pesquisa feita mediante o 'regex'.
